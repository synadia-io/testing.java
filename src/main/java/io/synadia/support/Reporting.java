/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.synadia.support;

import io.nats.jsmulti.shared.ProfileStats;
import io.nats.jsmulti.shared.Stats;

public abstract class Reporting {
    public static final String STATS_TOP_LINE    = "┌─────────────────────┬───────────────────┬─────────────────┬──────────────────────────┬──────────────────┐";
    public static final String STATS_SEP_LINE    = "├─────────────────────┼───────────────────┼─────────────────┼──────────────────────────┼──────────────────┤";
    public static final String STATS_FOOT_LINE   = "└─────────────────────┴───────────────────┴─────────────────┴──────────────────────────┴──────────────────┘";
    public static final String STATS_LINE_HEADER = "│ %-19s │             count │            time │                 msgs/sec │        bytes/sec │\n";
    public static final String STATS_LINE_FORMAT = "│ %-19s │ %12s msgs │ %15s │ %15s msgs/sec │ %12s/sec │\n";

    public static void statsLineReport(String label, Stats stats) {
        long elapsed = stats.getElapsed();
        long messageCount = stats.getMessageCount();
        double messagesPerSecond = elapsed == 0 ? 0 : messageCount * Stats.MILLIS_PER_SECOND / elapsed;
        double bytesPerSecond = Stats.MILLIS_PER_SECOND * (stats.getBytes()) / (elapsed);
        System.out.printf(STATS_LINE_FORMAT, label,
            Stats.format(messageCount),
            Stats.humanTime(elapsed),
            Stats.format3(messagesPerSecond),
            Stats.humanBytes(bytesPerSecond));
    }

    public static final String PROFILE_TOP_LINE    = "┌─────────────────────┬────────────┬────────────┬────────────┬────────────┬────────────┬────────────┬────────────┬────────────┬─────────┬─────────┐";
    public static final String PROFILE_SEP_LINE    = "├─────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼─────────┼─────────┤";
    public static final String PROFILE_FOOT_LINE   = "└─────────────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴─────────┴─────────┘";
    public static final String PROFILE_LINE_HEADER = "│ %-19s │        max │   heap max │  allocated │       free │  heap used │  heap cmtd │   non used │   non cmtd │   alive │    dead │\n";
    public static final String PROFILE_LINE_FORMAT = "│ %-19s │ %10s │ %10s │ %10s │ %10s │ %10s │ %10s │ %10s │ %10s │ %7s │ %7s │\n";

    public static void profileLineReport(String label, ProfileStats p) {
        System.out.printf(PROFILE_LINE_FORMAT, label,
            Stats.humanBytes(p.maxMemory),
            Stats.humanBytes(p.heapMax),
            Stats.humanBytes(p.allocatedMemory),
            Stats.humanBytes(p.freeMemory),
            Stats.humanBytes(p.heapUsed),
            Stats.humanBytes(p.heapCommitted),
            Stats.humanBytes(p.nonHeapUsed),
            Stats.humanBytes(p.nonHeapCommitted),
            p.liveThreads.size() + "/" + p.threadCount,
            p.deadThreads.size() + "/" + p.threadCount);
    }
}
