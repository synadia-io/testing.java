/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.synadia.workloads;

import io.nats.client.*;
import io.nats.client.api.KeyValueConfiguration;
import io.synadia.CommandLine;
import io.synadia.Workload;
import io.synadia.tools.Debug;

import java.io.IOException;
import java.util.List;

public class SetupTracking extends Workload {
    public SetupTracking(CommandLine commandLine) {
        super("Setup Tracking", commandLine);
    }

    @Override
    public void runWorkload() throws Exception {
        Options options = getAdminOptions();
        try (Connection nc = Nats.connect(options)) {
            KeyValueManagement kvm = nc.keyValueManagement();
            List<String> bucketNames = kvm.getBucketNames();
            setupBucket(params.statsBucket, 1, kvm, bucketNames);
            setupBucket(params.runStatsBucket, 32, kvm, bucketNames);
        }
        catch (Exception e) {
            e.printStackTrace();
            System.exit(-1);
        }
    }

    private void setupBucket(String bucket, int maxHistoryPerKey, KeyValueManagement kvm, List<String> bucketNames) throws IOException, JetStreamApiException, InterruptedException {
        if (bucketNames.contains(bucket)) {
            Debug.info(workloadName, "Removing existing bucket: " + bucket);
            kvm.delete(bucket);
            Thread.sleep(200); // the server needs time to process the delete
        }
        Debug.info(workloadName, "Creating bucket: " + bucket);
        KeyValueConfiguration kvc = KeyValueConfiguration.builder()
            .name(bucket)
            .maxHistoryPerKey(maxHistoryPerKey)
            .build();
        Debug.info(workloadName, kvm.create(kvc));
    }
}
